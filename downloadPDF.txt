return new Promise(resolve => {
    // Your logic goes here
    app.log("==========================in display calendar=============================")
    let today = new Date();
    let newdate = new Date(today);
	app.log("======================in final message=======================")
	app.log(app.context.steps['displayseats'], "the details are:")
	let detail = app.context.steps['displayseats']
	let details = JSON.parse(detail)
	let name = details.event.data.Name
	let numOfSeats = details.event.data.Numofseats
	let seatNumbers = details.event.data.seats
	app.log(name)
	app.log(numOfSeats)
	app.log(seatNumbers)
	//let movieName = app.context.steps['displaymovies']
	//app.log(movieName, "the  movie details are:")
	let data1 = JSON.parse(app.context.steps['calendar'])
	let date = data1.event.data.date
	app.log(date)
	let time = app.context.steps['displayshowtimings']
	app.log(time)
	//let theatre = app.context.steps['theatre']
	//let location = app.context.steps['location']
	//app.log(theatre)
	app.memory.get("location").then((loc) => {
		app.memory.get("movie").then((movieName) => {
			app.memory.get("TheatreName").then((theatre) => {

				// app.sendTextMessage('Hi ' + name + "\n" + numOfSeats + " seats booked for " + movieName + " on " + date + " , " + time + " at " + theatre + " : " + loc + "\nSeat numbers : " + seatNumbers)


    newdate.setDate(newdate.getDate() + 10);
    let dd = today.getDate();

    let mm = today.getMonth() + 1;
    let y = today.getFullYear();
    let dd1 = newdate.getDate();

    let mm1 = newdate.getMonth() + 1;
    let y1 = newdate.getFullYear();

    // app.log(products)

    let someFormattedDate = y + '-' + mm + '-' + dd;
    let someFormattedDate1 = y1 + '-' + mm1 + '-' + dd1;
    let loginHtml = `<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Js-To-PDF</title>

	<style>

		
		img.avatar {
  			width: 100%;
  			height:40%;
 	 		border-radius: 30%;
		}
button {
  background-color: #000000;
  color: #FFDF00;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  cursor: pointer;
  width: 100%;
  opacity: 0.9;
}

button:hover {
  opacity:1;
  background-color: #7CFC00;
  color:#000000;
}
	

		input {
			padding: 12px 20px;
		}
	</style>
</head>
<body>
	
<button  style="width:100%;background-color:#000000,color:#FFD700">DOWNLOAD TICKET</button>


	<script 
		src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js" 
	  integrity="sha256-vIL0pZJsOKSz76KKVCyLxzkOT00vXs+Qz4fYRVMoDhw="
	  crossorigin="anonymous">
	</script>

	<script>

		// init the jsPDF library
		const pdf = new jsPDF();

		// select the button
		let button = document.querySelector('button');
		// select the input
		let input = document.querySelector('input');

		// add 'click' event listener for the button
		button.addEventListener('click', printPDF)
		

		// actual PDF options
		function printPDF() {
		


			// @param 1 - Coordinate (in units declared at inception of PDF document) against left edge of the page
			// @param 2 - Coordinate (in units declared at inception of PDF document) against upper edge of the page
			// @param 3 - String or array of strings to be added to the page. Each line is shifted one line down per font, spacing settings declared before this call.
			pdf.text(50, 10,'HELLO ${name}');
			pdf.text(30,20,'TICKET DETAILS');
			pdf.text(20,30,'MOVIE:${movieName}');
			pdf.text(30,40,'THEATRE:${theatre}' );
			pdf.text(30,50,'DATE:${date}');
			pdf.text(30,60,'SHOW TIME:${time}');
			pdf.text(30,70,'NUMBER OF SEATS:${numOfSeats}');
			pdf.text(30,80,'SEAT NUMBER:${seatNumbers}');

			pdf.setTextColor(255, 0, 0);

			// save the PDF document (downloadable)
			pdf.save();

		}

	</script>

</body>
</html>`
    let buf = Buffer.from(loginHtml, "utf8");
    app.uploadFile(buf, "file.html").then((res) => {
        app.log(res, "html file link");
        app.sendWebView('', res, 60).then((results) => {
            app.setStep("calander", loginHtml)
            app.log(results, 'result');
            return resolve();
        });
    });
			})
		})
	})
});
