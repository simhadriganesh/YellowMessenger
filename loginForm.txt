return new Promise(resolve => {
  // Your logic goes here
  app.log("INSIDE LOGIN FUNCTIONS")
  let activeuser='';
  let loginHtml = `<!DOCTYPE html>
<html lang="en">
<head>
    <title></title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#submit").click(function () {
                if ($("#start").val()) {
                    window.parent.postMessage(JSON.stringify({
                        event_code: 'ym-client-event', data: JSON.stringify({
                            event: {
                                code: "auth",
                                data: {
                                    userName: $("#start").val(),
                                    password: $("#start1").val()
                                }
                            }
                        })
                    }), '*');
                    $('#custom :input').attr('disabled', 'disabled');
                    $('#custom').fadeTo("slow", 0.15, function () {
                        $(this).find(':input').attr('disabled', 'disabled');
                        $(this).find('label').css('cursor', 'default');
                    });
                }
            })
        })
    </script>
    <style>
body {font-family: Arial, Helvetica, sans-serif;}
* {box-sizing: border-box;}

/* Full-width input fields */
input[type=text], input[type=password] {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  display: inline-block;
  border: none;
  background: #f1f1f1;
}

/* Add a background color when the inputs get focus */
input[type=text]:focus, input[type=password]:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for all buttons */
button {
  background-color: #000000;
  color: #FFDF00;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  cursor: pointer;
  width: 100%;
  opacity: 0.9;
}

button:hover {
  opacity:1;
  background-color: #7CFC00;
  color:#000000;
}

/* Extra styles for the cancel button */
.cancelbtn {
  padding: 14px 20px;
  background-color: #f44336;
}

/* Float cancel and signup buttons and add an equal width */
.cancelbtn, .signupbtn {
  float: left;
  width: 50%;
}

/* Add padding to container elements */
.container {
  padding: 16px;
}

/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: #474e5d;
  padding-top: 50px;
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
}

/* Style the horizontal ruler */
hr {
  border: 1px solid #f1f1f1;
  margin-bottom: 25px;
}
 
/* The Close Button (x) */
.close {
  position: absolute;
  right: 35px;
  top: 15px;
  font-size: 40px;
  font-weight: bold;
  color: #f1f1f1;
}

.close:hover,
.close:focus {
  color: #f44336;
  cursor: pointer;
}
img.avatar {
  width: 100%;
  height:40%;
  border-radius: 30%;
}

/* Clear floats */
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

/* Change styles for cancel button and signup button on extra small screens */
@media screen and (max-width: 300px) {
  .cancelbtn, .signupbtn {
     background-color:#000000;
     color: #FFDF00;
     width: 100%;
  }
}
</style>

</head>

<img src="https://drive.google.com/u/0/uc?id=1pZqMeyMVzLR_ZluMDgICT7lYbGdL46sl&export=download" alt="Avatar" class="avatar">
<button onclick="document.getElementById('id01').style.display='block'" style="width:100%;background-color:#000000,color:#FFD700">LOG IN</button>
<body>
<div id="id01" class="modal">
  <span onclick="document.getElementById('id01').style.display='none'" class="close" title="Close Modal">&times;</span>
  <form class="modal-content" action="/action_page.php">
    <div class="container">
      <h1>REMO</h1>
      
      <hr>
      <label for="email"><b>Email or Phone</b></label>
      <input type="text" placeholder="Enter Email" id="start" name="email" required>

      <label for="psw"><b>Password</b></label>
      <input type="password" placeholder="Enter Password" id="start1" name="psw" required>      
      <label>
        <input type="checkbox" checked="checked" name="remember" style="margin-bottom:15px"> Remember me
      </label>

      <p>click for <a href="#" style="color:dodgerblue">Terms & Privacy</a>.</p>

      <div class="clearfix">
        <button type="button" onclick="document.getElementById('id01').style.display='none'" class="cancelbtn">Cancel</button>
        <button type="submit" id="submit">Log IN</button>
      </div>
    </div>
  </form>
</div>
</body>
</html>`

  app.memory.get("activeUser").then((user) => {
    activeuser = user;
    app.log(user, "Active User")
  })
  if(activeuser==""){
      let buf = Buffer.from(loginHtml, "utf8");
      app.uploadFile(buf, "file.html").then((res) => {
        app.log(res, "html file link");
        app.sendWebView('', res, 280).then((results) => {
          app.log(results, 'result');
          return resolve();
        });
      });
  }
   
 
});